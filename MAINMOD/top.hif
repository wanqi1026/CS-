HIF003
--
-- Copyright (C) 1988-2002 Altera Corporation
-- Any megafunction design, and related net list (encrypted or decrypted),
-- support information, device programming or simulation file, and any other
-- associated documentation or information provided by Altera or a partner
-- under Altera's Megafunction Partnership Program may be used only to
-- program PLD devices (but not masked PLD devices) from Altera.  Any other
-- use of such megafunction design, net list, support information, device
-- programming or simulation file, or any other related documentation or
-- information is prohibited for any other purpose, including, but not
-- limited to modification, reverse engineering, de-compiling, or use with
-- any other silicon devices, unless such use is explicitly licensed under
-- a separate agreement with Altera or a megafunction partner.  Title to
-- the intellectual property, including patents, copyrights, trademarks,
-- trade secrets, or maskworks, embodied in any such megafunction design,
-- net list, support information, device programming or simulation file, or
-- any other related documentation or information provided by Altera or a
-- megafunction partner, remains with Altera, the megafunction partner, or
-- their respective licensors.  No other licenses, including any licenses
-- needed under any third party's intellectual property, are provided herein.
--
-- Warning: do not edit this file!
--
FILES
{
	mcommand.vhd
	{
		mcommand [] [U1147235.DLS,U7449008.DLS,U2043679.DLS,U9587408.DLS,U9234712.DLS,U9092257.DLS,U5125632.DLS]
		{
			13 [] [];
		}
	}
	controm.vhd
	{
		controm [] [U3877600.DLS,U4470260.DLS,U9234712.DLS,U9587408.DLS,U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			12 [] [];
		}
	}
	f3.vhd
	{
		f3 [] [U1147235.DLS,U7449008.DLS,U2043679.DLS]
		{
			11 [] [];
		}
	}
	f2.vhd
	{
		f2 [] [U1147235.DLS,U7449008.DLS,U2043679.DLS]
		{
			10 [] [];
		}
	}
	f1.vhd
	{
		f1 [] [U1147235.DLS,U7449008.DLS,U2043679.DLS]
		{
			9 [] [];
		}
	}
	mmm.vhd
	{
		mmm [] [U1147235.DLS,U7449008.DLS,U2043679.DLS]
		{
			8 [] [];
		}
	}
	aa.gdf
	{
		aa [] []
		{
			7 [] [];
		}
	}
	addr.vhd
	{
		addr [] [U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			14 [] [];
		}
	}
	altshift.tdf
	{
		altshift [USE_LPM_FOR_AHDL_OPERATORS,WIDTH=4,DEPTH=0] []
		{
			4 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=2,DEPTH=0] [data0,data1,result0,result1];
			5 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=1,DEPTH=0] [data0,result0];
			19 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=8,DEPTH=0] [data0,data1,data2,data3,data4,data5,data6,data7,result0,result1,result2,result3,result4,result5,result6,result7];
			37 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=9,DEPTH=0] [data0,data1,data2,data3,data4,data5,data6,data7,data8,result0,result1,result2,result3,result4,result5,result6,result7,result8];
		}
	}
	addcore.tdf
	{
		addcore [USE_LPM_FOR_AHDL_OPERATORS,width,CONSTANT_CIN,CARRY_CHAIN,CARRY_CHAIN_LENGTH,DEVICE_FAMILY] [aglobal.inc,addcore.inc]
		{
			3 [USE_LPM_FOR_AHDL_OPERATORS=OFF,width=2,CONSTANT_CIN=0,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=ACEX1K] [cin,datab0,datab1,dataa0,dataa1,result0,result1];
			18 [USE_LPM_FOR_AHDL_OPERATORS=OFF,width=8,CONSTANT_CIN=0,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=ACEX1K] [cin,datab0,datab1,datab2,datab3,datab4,datab5,datab6,datab7,dataa0,dataa1,dataa2,dataa3,dataa4,dataa5,dataa6,dataa7,result0,result1,result2,result3,result4,result5,result6,result7];
			36 [USE_LPM_FOR_AHDL_OPERATORS=OFF,width=9,CONSTANT_CIN=0,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=ACEX1K] [cin,datab0,datab1,datab2,datab3,datab4,datab5,datab6,datab7,datab8,dataa0,dataa1,dataa2,dataa3,dataa4,dataa5,dataa6,dataa7,dataa8,result0,result1,result2,result3,result4,result5,result6,result7,result8];
		}
	}
	lpm_add_sub.tdf
	{
		lpm_add_sub [USE_LPM_FOR_AHDL_OPERATORS,LPM_WIDTH,LPM_REPRESENTATION=SIGNED,LPM_DIRECTION=DEFAULT,ONE_INPUT_IS_CONSTANT=NO,LPM_PIPELINE=0,MAXIMIZE_SPEED=5,OPTIMIZE_FOR_SPEED=5,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY,STYLE] [aglobal.inc,altshift.inc,bypassff.inc,look_add.inc,addcore.inc,lpm_add_sub.inc]
		{
			2 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=2,LPM_REPRESENTATION=SIGNED,LPM_DIRECTION=DEFAULT,ONE_INPUT_IS_CONSTANT=YES,LPM_PIPELINE=0,MAXIMIZE_SPEED=5,OPTIMIZE_FOR_SPEED=5,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=ACEX1K,STYLE=NORMAL] [DATAA0,DATAA1,DATAB0,DATAB1,CIN,RESULT0,RESULT1];
			17 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=8,LPM_REPRESENTATION=SIGNED,LPM_DIRECTION=DEFAULT,ONE_INPUT_IS_CONSTANT=YES,LPM_PIPELINE=0,MAXIMIZE_SPEED=5,OPTIMIZE_FOR_SPEED=5,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=ACEX1K,STYLE=NORMAL] [DATAA0,DATAA1,DATAA2,DATAA3,DATAA4,DATAA5,DATAA6,DATAA7,DATAB0,DATAB1,DATAB2,DATAB3,DATAB4,DATAB5,DATAB6,DATAB7,CIN,RESULT0,RESULT1,RESULT2,RESULT3,RESULT4,RESULT5,RESULT6,RESULT7];
			35 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=9,LPM_REPRESENTATION=SIGNED,LPM_DIRECTION=DEFAULT,ONE_INPUT_IS_CONSTANT=NO,LPM_PIPELINE=0,MAXIMIZE_SPEED=5,OPTIMIZE_FOR_SPEED=5,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=ACEX1K,STYLE=NORMAL] [DATAA0,DATAA1,DATAA2,DATAA3,DATAA4,DATAA5,DATAA6,DATAA7,DATAA8,DATAB0,DATAB1,DATAB2,DATAB3,DATAB4,DATAB5,DATAB6,DATAB7,DATAB8,CIN,RESULT0,RESULT1,RESULT2,RESULT3,RESULT4,RESULT5,RESULT6,RESULT7,RESULT8];
			38 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=9,LPM_REPRESENTATION=SIGNED,LPM_DIRECTION=DEFAULT,ONE_INPUT_IS_CONSTANT=YES,LPM_PIPELINE=0,MAXIMIZE_SPEED=5,OPTIMIZE_FOR_SPEED=5,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=ACEX1K,STYLE=NORMAL] [DATAA0,DATAA1,DATAA2,DATAA3,DATAA4,DATAA5,DATAA6,DATAA7,DATAA8,DATAB0,DATAB1,DATAB2,DATAB3,DATAB4,DATAB5,DATAB6,DATAB7,DATAB8,CIN,RESULT0,RESULT1,RESULT2,RESULT3,RESULT4,RESULT5,RESULT6,RESULT7,RESULT8];
		}
	}
	ram.vhd
	{
		ram [] [U1147235.DLS,U7449008.DLS,U2043679.DLS,U9587408.DLS,U9234712.DLS,U9092257.DLS,U5125632.DLS]
		{
			33 [] [];
		}
	}
	rom.vhd
	{
		rom [] [U1147235.DLS,U7449008.DLS,U2043679.DLS,U9587408.DLS,U9234712.DLS,U4470260.DLS,U3877600.DLS]
		{
			32 [] [];
		}
	}
	r3.vhd
	{
		r3 [] [U1147235.DLS,U7449008.DLS,U2043679.DLS]
		{
			31 [] [];
		}
	}
	r2.vhd
	{
		r2 [] [U1147235.DLS,U7449008.DLS,U2043679.DLS]
		{
			30 [] [];
		}
	}
	fen2.vhd
	{
		fen2 [] [U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			29 [] [];
		}
	}
	r1.vhd
	{
		r1 [] [U1147235.DLS,U7449008.DLS,U2043679.DLS]
		{
			28 [] [];
		}
	}
	r0.vhd
	{
		r0 [] [U1147235.DLS,U7449008.DLS,U2043679.DLS]
		{
			27 [] [];
		}
	}
	mux3_2.vhd
	{
		mux3_2 [] [U1147235.DLS,U7449008.DLS,U2043679.DLS]
		{
			26 [] [];
		}
	}
	psw.vhd
	{
		psw [] [U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			39 [] [];
		}
	}
	mux4_2.vhd
	{
		mux4_2 [] [U1147235.DLS,U7449008.DLS,U2043679.DLS]
		{
			25 [] [];
		}
	}
	alu.vhd
	{
		alu [] [U1147235.DLS,U7449008.DLS,U2043679.DLS,U9587408.DLS,U9234712.DLS,U4470260.DLS,U3877600.DLS]
		{
			34 [] [];
		}
	}
	mux4_1.vhd
	{
		mux4_1 [] [U1147235.DLS,U7449008.DLS,U2043679.DLS]
		{
			24 [] [];
		}
	}
	mux3_1.vhd
	{
		mux3_1 [] [U1147235.DLS,U7449008.DLS,U2043679.DLS]
		{
			23 [] [];
		}
	}
	ar.vhd
	{
		ar [] [U1147235.DLS,U7449008.DLS,U2043679.DLS]
		{
			22 [] [];
		}
	}
	convert.vhd
	{
		convert [] [U1147235.DLS,U7449008.DLS,U2043679.DLS]
		{
			21 [] [];
		}
	}
	ir.vhd
	{
		ir [] [U1147235.DLS,U7449008.DLS,U2043679.DLS]
		{
			20 [] [];
		}
	}
	pc.vhd
	{
		pc [] [U1147235.DLS,U7449008.DLS,U2043679.DLS,U9587408.DLS,U9234712.DLS,U4470260.DLS,U3877600.DLS]
		{
			16 [] [];
		}
	}
	decoder.vhd
	{
		decoder [] [U1147235.DLS,U7449008.DLS,U2043679.DLS]
		{
			15 [] [];
		}
	}
	crom.gdf
	{
		crom [] []
		{
			6 [] [];
		}
	}
	counter.vhd
	{
		counter [] [U1147235.DLS,U7449008.DLS,U2043679.DLS,U9587408.DLS,U9234712.DLS,U4470260.DLS,U3877600.DLS]
		{
			1 [] [];
		}
	}
	top.gdf
	{
		top [] []
		{
			0 [] [];
		}
	}
}
TREE
{
	top::(0,0):(0): top.gdf
	{
		psw::(0,0):(71): psw.vhd;
		ram::(0,0):(38): ram.vhd;
		rom::(0,0):(33): rom.vhd;
		r3::(0,0):(28): r3.vhd;
		r2::(0,0):(27): r2.vhd;
		fen2::(0,0):(25): fen2.vhd;
		r1::(0,0):(17): r1.vhd;
		r0::(0,0):(16): r0.vhd;
		mux3_2::(0,0):(15): mux3_2.vhd;
		mux4_2::(0,0):(13): mux4_2.vhd;
		mux4_1::(0,0):(11): mux4_1.vhd;
		mux3_1::(0,0):(10): mux3_1.vhd;
		ar::(0,0):(8): ar.vhd;
		convert::(0,0):(7): convert.vhd;
		ir::(0,0):(6): ir.vhd;
		pc::(0,0):(4): pc.vhd
		{
			lpm_add_sub:17:(23,25):(132): lpm_add_sub.tdf
			{
				addcore:18:(212,4):(58,adder): addcore.tdf;
				altshift:19:(222,2):(89,result_ext_latency_ffs): altshift.tdf;
				altshift:5:(224,2):(111,carry_ext_latency_ffs): altshift.tdf;
				altshift:5:(226,2):(119,oflow_ext_latency_ffs): altshift.tdf;
			}
		}
		decoder::(0,0):(3): decoder.vhd;
		crom::(0,0):(2): crom.gdf
		{
			aa:7:(0,0):(35): aa.gdf
			{
				mmm:8:(0,0):(31): mmm.vhd;
				mmm:8:(0,0):(36): mmm.vhd;
				mmm:8:(0,0):(35): mmm.vhd;
				mmm:8:(0,0):(34): mmm.vhd;
				mmm:8:(0,0):(33): mmm.vhd;
				mmm:8:(0,0):(32): mmm.vhd;
			}
			f1:9:(0,0):(36): f1.vhd;
			f2:10:(0,0):(37): f2.vhd;
			f3:11:(0,0):(38): f3.vhd;
			controm:12:(0,0):(39): controm.vhd;
			mcommand:13:(0,0):(40): mcommand.vhd;
			addr:14:(0,0):(43): addr.vhd;
		}
		counter::(0,0):(1): counter.vhd
		{
			lpm_add_sub:2:(23,17):(64): lpm_add_sub.tdf
			{
				addcore:3:(212,4):(40,adder): addcore.tdf;
				altshift:4:(222,2):(53,result_ext_latency_ffs): altshift.tdf;
				altshift:5:(224,2):(63,carry_ext_latency_ffs): altshift.tdf;
				altshift:5:(226,2):(71,oflow_ext_latency_ffs): altshift.tdf;
			}
		}
		alu::(0,0):(65): alu.vhd
		{
			lpm_add_sub:35:(25,17):(411): lpm_add_sub.tdf
			{
				addcore:36:(212,4):(61,adder): addcore.tdf;
				altshift:37:(222,2):(95,result_ext_latency_ffs): altshift.tdf;
				altshift:5:(224,2):(119,carry_ext_latency_ffs): altshift.tdf;
				altshift:5:(226,2):(127,oflow_ext_latency_ffs): altshift.tdf;
			}
			lpm_add_sub:38:(44,17):(693): lpm_add_sub.tdf
			{
				addcore:36:(212,4):(61,adder): addcore.tdf;
				altshift:37:(222,2):(95,result_ext_latency_ffs): altshift.tdf;
				altshift:5:(224,2):(119,carry_ext_latency_ffs): altshift.tdf;
				altshift:5:(226,2):(127,oflow_ext_latency_ffs): altshift.tdf;
			}
			lpm_add_sub:38:(67,17):(998): lpm_add_sub.tdf
			{
				addcore:36:(212,4):(61,adder): addcore.tdf;
				altshift:37:(222,2):(95,result_ext_latency_ffs): altshift.tdf;
				altshift:5:(224,2):(119,carry_ext_latency_ffs): altshift.tdf;
				altshift:5:(226,2):(127,oflow_ext_latency_ffs): altshift.tdf;
			}
		}
	}
}
